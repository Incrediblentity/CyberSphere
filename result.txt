import React from "react";
import { motion } from "framer-motion";
import { Shield, AlertTriangle, CheckCircle, XCircle } from "lucide-react";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

export default function ScanResult({ result, type }) {
  const isSafe = result.is_safe;
  const score = result.safety_score;

  const getScoreColor = () => {
    if (score >= 80) return "from-emerald-400 to-emerald-600";
    if (score >= 50) return "from-yellow-400 to-yellow-600";
    return "from-red-400 to-red-600";
  };

  const getStatusIcon = () => {
    if (isSafe) return <CheckCircle className="w-8 h-8 text-emerald-400" />;
    return <XCircle className="w-8 h-8 text-red-400" />;
  };

  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.95 }}
      animate={{ opacity: 1, scale: 1 }}
      className="mt-6"
    >
      <Card className={backdrop-blur-xl ${isSafe ? "bg-emerald-500/10 border-emerald-500/30" : "bg-red-500/10 border-red-500/30"} p-6 rounded-xl}>
        {/* Score and Status */}
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-4">
            {getStatusIcon()}
            <div>
              <h4 className="text-xl font-bold text-white">
                {isSafe ? "✓ Content is Safe" : "⚠ Threat Detected"}
              </h4>
              <p className="text-white/60 text-sm">{type} Analysis Complete</p>
            </div>
          </div>
          <div className="text-center">
            <div className={text-4xl font-bold bg-gradient-to-r ${getScoreColor()} bg-clip-text text-transparent}>
              {score}%
            </div>
            <p className="text-white/60 text-xs">Safety Score</p>
          </div>
        </div>

        {/* Progress Bar */}
        <div className="w-full h-3 bg-white/10 rounded-full overflow-hidden mb-6">
          <motion.div
            initial={{ width: 0 }}
            animate={{ width: ${score}% }}
            transition={{ duration: 1, ease: "easeOut" }}
            className={h-full bg-gradient-to-r ${getScoreColor()}}
          />
        </div>

        {/* Analysis */}
        <div className="mb-6">
          <h5 className="text-white font-semibold mb-3 flex items-center gap-2">
            <Shield className="w-4 h-4" />
            Detailed Analysis
          </h5>
          <p className="text-white/80 leading-relaxed text-sm">{result.analysis}</p>
        </div>

        {/* Recommendations */}
        {result.recommendations && result.recommendations.length > 0 && (
          <div>
            <h5 className="text-white font-semibold mb-3 flex items-center gap-2">
              <AlertTriangle className="w-4 h-4" />
              Recommended Actions
            </h5>
            <div className="space-y-2">
              {result.recommendations.map((rec, index) => (
                <div key={index} className="flex items-start gap-3 bg-white/5 rounded-lg p-3">
                  <Badge className={${isSafe ? "bg-emerald-500/20 text-emerald-300" : "bg-red-500/20 text-red-300"} border-0 mt-0.5}>
                    {index + 1}
                  </Badge>
                  <p className="text-white/80 text-sm flex-1">{rec}</p>
                </div>
              ))}
            </div>
          </div>
        )}
      </Card>
    </motion.div>
  );
}